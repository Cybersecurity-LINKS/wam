diff --git a/CMakeLists.txt b/CMakeLists.txt
index fe5edf3..6375266 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -54,6 +54,9 @@ endif()
 
 if(WITH_IOTA_CLIENT)
 include(cmake/cjson.cmake)
+##########################################################################################
+include(cmake/curl.cmake)
+##########################################################################################
 endif()
 
 if(WITH_IOTA_CORE)
@@ -122,9 +125,11 @@ if(IOTA_ASAN_ENABLED)
   endif()
 endif()
 
-if(WITH_IOTA_CLIENT)
-  find_package(CURL REQUIRED)
-endif()
+##########################################################################################
+# if(WITH_IOTA_CLIENT)
+#   find_package(CURL REQUIRED)
+# endif()
+##########################################################################################
 
 # links libraries in the sandbox
 link_directories("${CMAKE_INSTALL_PREFIX}/lib")
diff --git a/cmake/sodium.cmake b/cmake/sodium.cmake
index cd86d63..8c496c0 100644
--- a/cmake/sodium.cmake
+++ b/cmake/sodium.cmake
@@ -16,7 +16,7 @@ if (NOT __SODIUM_INCLUDED)
     URL https://download.libsodium.org/libsodium/releases/libsodium-1.0.18-stable.tar.gz
     # URL_HASH SHA256=2ef4304dd844e274d78dfcf0201e1ba1a312eaba135bdc8affc56a3d80b58593
     BUILD_IN_SOURCE TRUE
-    CONFIGURE_COMMAND ${sodium_src_dir}/configure --prefix=${CMAKE_INSTALL_PREFIX} --disable-shared CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}
+    CONFIGURE_COMMAND ${sodium_src_dir}/configure --prefix=${CMAKE_INSTALL_PREFIX} --disable-shared CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} --host=riscv64-unknown-linux-gnu
     # BUILD_COMMAND make
     # INSTALL_COMMAND ""
     # for debug
diff --git a/src/client/CMakeLists.txt b/src/client/CMakeLists.txt
index a5a829b..5549fd5 100644
--- a/src/client/CMakeLists.txt
+++ b/src/client/CMakeLists.txt
@@ -68,16 +68,20 @@ if(MQTT_CLIENT_ENABLE)
 endif()
 
 target_include_directories(
-  iota_client PUBLIC "${PROJECT_SOURCE_DIR}/src" "${CURL_INCLUDE_DIRS}"
-                     "${CMAKE_INSTALL_PREFIX}/include/cjson" # for esp32 compatibility
+  iota_client PUBLIC "${PROJECT_SOURCE_DIR}/src" 
+                      "${CMAKE_INSTALL_PREFIX}/include/curl" # "${CURL_INCLUDE_DIRS}"
+                      "${CMAKE_INSTALL_PREFIX}/include/cjson" # for esp32 compatibility
+                      # "${OPENSSL_INCLUDE_DIR}/openssl" 
 )
 
-add_dependencies(iota_client iota_core ext_cjson)
+add_dependencies(iota_client iota_core ext_cjson curl ext_OpenSSL)
 
 target_link_libraries(
   iota_client
-  INTERFACE ${CURL_LIBRARIES} cjson
-  PUBLIC iota_core)
+  INTERFACE cjson curl dl# ${CURL_LIBRARIES} 
+  PUBLIC iota_core
+  INTERFACE ${OPENSSL_INSTALL_DIR}/lib/libssl.a ${OPENSSL_INSTALL_DIR}/lib/libcrypto.a
+)
 
 if(MQTT_CLIENT_ENABLE)
   target_link_libraries(iota_client PRIVATE Threads::Threads)
@@ -91,4 +95,4 @@ install(
   DIRECTORY "${PROJECT_SOURCE_DIR}/src/client/"
   DESTINATION "${CMAKE_INSTALL_PREFIX}/include/client"
   FILES_MATCHING
-  PATTERN "*.h")
+  PATTERN "*.h")
\ No newline at end of file
diff --git a/src/core/models/inputs/utxo_input.h b/src/core/models/inputs/utxo_input.h
index 689656b..48d5ca8 100644
--- a/src/core/models/inputs/utxo_input.h
+++ b/src/core/models/inputs/utxo_input.h
@@ -44,7 +44,7 @@ extern "C" {
  *
  * @return utxo_inputs_t* a NULL pointer
  */
-static utxo_input_ht *utxo_inputs_new() { return NULL; }
+//static utxo_input_ht *utxo_inputs_new() { return NULL; }
 
 /**
  * @brief Find an utxo input by a given transaction ID
@@ -53,32 +53,32 @@ static utxo_input_ht *utxo_inputs_new() { return NULL; }
  * @param[in] tx_id A transaction ID
  * @return utxo_input_ht*
  */
-static utxo_input_ht *utxo_inputs_find_by_id(utxo_input_ht **inputs, byte_t const tx_id[]) {
+/* static utxo_input_ht *utxo_inputs_find_by_id(utxo_input_ht **inputs, byte_t const tx_id[]) {
   utxo_input_ht *in = NULL;
   HASH_FIND(hh, *inputs, tx_id, TRANSACTION_ID_BYTES, in);
   return in;
 }
-
+ */
 /**
  * @brief Get the size of utxo inputs
  *
  * @param[in] ht An utxo input hash table.
  * @return uint16_t
  */
-static uint16_t utxo_inputs_count(utxo_input_ht **ht) { return (uint16_t)HASH_COUNT(*ht); }
+//static uint16_t utxo_inputs_count(utxo_input_ht **ht) { return (uint16_t)HASH_COUNT(*ht); }
 
 /**
  * @brief Free an utxo input hash table.
  *
  * @param[in] utxo_ins An utxo input hash table.
  */
-static void utxo_inputs_free(utxo_input_ht **ht) {
+/* static void utxo_inputs_free(utxo_input_ht **ht) {
   utxo_input_ht *curr_elm, *tmp;
   HASH_ITER(hh, *ht, curr_elm, tmp) {
     HASH_DEL(*ht, curr_elm);
     free(curr_elm);
   }
-}
+} */
 
 /**
  * @brief Append an utxo input element to the list.
diff --git a/src/core/models/outputs/outputs.h b/src/core/models/outputs/outputs.h
index 37e9fe5..d9dc759 100644
--- a/src/core/models/outputs/outputs.h
+++ b/src/core/models/outputs/outputs.h
@@ -49,7 +49,7 @@ extern "C" {
  *
  * @return outputs_ht* a NULL pointer
  */
-static outputs_ht *utxo_outputs_new() { return NULL; }
+//static outputs_ht *utxo_outputs_new() { return NULL; }
 
 /**
  * @brief Find an utxo output by a given address
@@ -58,11 +58,11 @@ static outputs_ht *utxo_outputs_new() { return NULL; }
  * @param[in] addr An address for searching
  * @return outputs_ht*
  */
-static outputs_ht *utxo_outputs_find_by_addr(outputs_ht **ht, byte_t addr[]) {
+/* static outputs_ht *utxo_outputs_find_by_addr(outputs_ht **ht, byte_t addr[]) {
   outputs_ht *elm = NULL;
   HASH_FIND(hh, *ht, addr, ED25519_ADDRESS_BYTES, elm);
   return elm;
-}
+} */
 
 /**
  * @brief Get the size of utxo outputs
@@ -70,20 +70,20 @@ static outputs_ht *utxo_outputs_find_by_addr(outputs_ht **ht, byte_t addr[]) {
  * @param[in] ht An utxo output hash table.
  * @return uint16_t
  */
-static uint16_t utxo_outputs_count(outputs_ht **ht) { return (uint16_t)HASH_COUNT(*ht); }
+//static uint16_t utxo_outputs_count(outputs_ht **ht) { return (uint16_t)HASH_COUNT(*ht); }
 
 /**
  * @brief Free an utxo output hash table.
  *
  * @param[in] utxo_ins An utxo output hash table.
  */
-static void utxo_outputs_free(outputs_ht **ht) {
+/* static void utxo_outputs_free(outputs_ht **ht) {
   outputs_ht *curr_elm, *tmp;
   HASH_ITER(hh, *ht, curr_elm, tmp) {
     HASH_DEL(*ht, curr_elm);
     free(curr_elm);
   }
-}
+} */
 
 /**
  * @brief Append an utxo output element to the table.
diff --git a/src/core/utils/byte_buffer.h b/src/core/utils/byte_buffer.h
index d8e8c26..7318766 100644
--- a/src/core/utils/byte_buffer.h
+++ b/src/core/utils/byte_buffer.h
@@ -92,7 +92,7 @@ byte_buf_t* byte_buf_clonen(byte_buf_t* buf, size_t length);
  * @param[in] buf A byte buffer
  * @return byte_buf_t*
  */
-static byte_buf_t* byte_buf_clone(byte_buf_t* buf) { return byte_buf_clonen(buf, buf->len); };
+//static byte_buf_t* byte_buf_clone(byte_buf_t* buf) { return byte_buf_clonen(buf, buf->len); };
 
 /**
  * @brief Changes the buffer capacity
